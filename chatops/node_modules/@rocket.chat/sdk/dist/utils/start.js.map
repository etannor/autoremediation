{"version":3,"file":"start.js","sourceRoot":"","sources":["../../src/utils/start.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,8EAA8E;AAC9E,sDAAuC;AACvC,qCAA4C;AAE5C,+DAA+D;AAC/D;;QACE,MAAM,MAAM,CAAC,OAAO,EAAE,CAAA;QACtB,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,gBAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,gBAAO,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC9E,MAAM,MAAM,CAAC,SAAS,CAAC,iBAAQ,CAAC,CAAA;QAChC,MAAM,MAAM,CAAC,mBAAmB,EAAE,CAAA;QAClC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE;YAC7C,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,GAAG,CAAA;YAClB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA;QACxE,CAAC,CAAC,CAAA;IACJ,CAAC;CAAA;AAED,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["// Test script uses standard methods and env config to connect and log streams\nimport * as driver from '../lib/driver'\nimport { botUser, botRooms } from './config'\n\n// Start subscription to log message stream (used for e2e test)\nasync function start () {\n  await driver.connect()\n  await driver.login({ username: botUser.username, password: botUser.password })\n  await driver.joinRooms(botRooms)\n  await driver.subscribeToMessages()\n  driver.respondToMessages((err, msg, msgOpts) => {\n    if (err) throw err\n    console.log('[respond]', JSON.stringify(msg), JSON.stringify(msgOpts))\n  })\n}\n\nstart().catch((e) => console.error(e))\n"]}