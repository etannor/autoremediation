{"version":3,"file":"api.js","sourceRoot":"","sources":["../../src/utils/api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Client } from 'node-rest-client'\nimport { apiHost } from './config'\nimport { INewUserAPI, ILoginResultAPI } from './interfaces'\n\nexport const api = new Client()\n\n// Prepare shortcuts for API requests / error handling\nconst basicHeaders = { 'Content-Type': 'application/json' }\nconst authHeaders = { 'X-Auth-Token': '', 'X-User-Id': '' }\nconst debug = (process.env.LOG_LEVEL === 'debug') // allow override\nexport const handle = (err: any) => {\n  console.error('ERROR (API):', JSON.stringify(err))\n  throw new Error(err.error || err.message || 'Unknown')\n}\n\n// Populate auth headers from response data\nexport function setAuth (authData: {authToken: string, userId: string}) {\n  authHeaders['X-Auth-Token'] = authData.authToken\n  authHeaders['X-User-Id'] = authData.userId\n}\n\n// Join basic headers with auth headers if required\nexport function getHeaders (authRequired = false) {\n  if (!authRequired) return basicHeaders\n  return Object.assign({}, basicHeaders, authHeaders)\n}\n\n// Do a POST request to an API endpoint\n// If it happens to come back with a token, keep the token\n// If it needs a token, use the token it kept (merges headers with auth)\n// Ignore param allows certain matching error messages to not count as errors\nexport function post (endpoint: string, data: any, auth?: boolean, ignore?: RegExp): Promise<any> {\n  let headers = getHeaders(auth)\n  if (debug) console.log(`POST: ${endpoint}`, JSON.stringify(data))\n  return new Promise((resolve, reject) => {\n    api.post(apiHost + endpoint, { headers, data }, (result: any) => {\n      if (\n        (result.status && result.status !== 'success') ||\n        (ignore && result.error && !ignore.test(result.error))\n      ) {\n        reject(result)\n      } else {\n        if (result.data && result.data.authToken) setAuth(result.data)\n        if (debug) console.log('RESULT:', JSON.stringify(result))\n        resolve(result)\n      }\n    })\n  }).catch(handle)\n}\n\n// Do a GET request to an API endpoint\nexport function get (endpoint: string, auth: boolean): Promise<any> {\n  let headers = getHeaders(auth)\n  if (debug) console.log(`GET: ${endpoint}`)\n  return new Promise((resolve, reject) => {\n    api.get(apiHost + endpoint, { headers }, (result: any) => {\n      if (result.status && result.status !== 'success') {\n        reject(result)\n      } else {\n        if (debug) console.log('RESULT:', JSON.stringify(result))\n        resolve(result)\n      }\n    })\n  }).catch(handle)\n}\n\n// Login a user for further API calls\nexport function login (user: INewUserAPI): Promise<ILoginResultAPI | undefined> {\n  return post('/api/v1/login', user)\n}\n\n// Logout a user at end of API calls\nexport function logout () {\n  return get('/api/v1/logout', true)\n}\n"]}